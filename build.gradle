group 'OOP'
//version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'eclipse'

println("For compile jar just use command: gradle fatJar\nFor javadoc: gradle javadoc\nFor tests: gradle test\n" +
        "For zip: gradle zip\nFor clean build folder: gradle clean\nAll of data will be in the build folder!!!")


sourceCompatibility = 1.8


repositories {
    mavenCentral()
}
task execute(type: JavaExec) {
    main = 'main'
    classpath = sourceSets.main.runtimeClasspath
}
//create a single Jar with all dependencies
task fatJar(type: Jar) {
    baseName = project.name
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
    manifest {

        attributes 'Main-Class': 'main'
    }
    copy{
    from "Images"
    into "build/libs/Images"
    }
}
//create javadoc
javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compile
}
sourceSets {
    main {
        resources {
            srcDirs = ["Images"]
            includes = ["**/*.png"]
        }
    }
}
task zip(type: Zip) {
    from('files/') {
	into('files')        
	}

    from('src/') {
	into('src')        
	}
    from('libs/') {
        include '**/*.jar'
        into('libs')
    }
    from('Images/') {
        into('Images')

    }
	from('/'){
	include 'build.gradle','.classpath','.project','.gitignore','settings.gradle'
		into('')
	}
}
dependencies {
    compile files('libs/javaapiforkml-2.2.0.jar','libs/jaxb-api-2.2.jar','libs/jaxb-impl-2.2.5.jar',
          'libs/mysql-connector-java-5.1.45-bin.jar')
    testCompile group: 'junit', name: 'junit', version: '4.12'
}


